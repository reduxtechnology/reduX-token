// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

/*

                                              !?JJJJJJJJJJJJJJJJJJJJ?7:         
                                            .?J???????????????????????J~        
                                           ^J??????????????????????????J7       
    .                                     ~J???????????????????????????7J?.     
   7G5!.                                 7J???????????????????????????????J:    
   .!PBP7.                             .?J7????????????????????????????????J~   
     .?GBP?:                          :J????????????????????????????????????J7  
       :JGBP?:                       ~J?????????????????????????????????????7J?.
         ^YGGGJ^           .::::::::7J???????????????????????J?????????????????J
          ^GGGGGY^         ?JJ????????????????????????????J?!: :Y??????????????Y
         ^5GGGGGGGY~        ^7J??7?????????????????????J?!:   ~J????????????7J?.
        !PGGGGGGGGGG5!.       .~?J??????????????????J?7^.   ^?J?????????????J7  
       ?GGGGGGGGGGGGGGP?:        :!?J?????????????J7~.    :7J??????????????J!   
     .YGGGGGGGGGGGGGGGGGPJ^        .~?J????????J?~.     .!J???????????????J^    
    ^5GGGGGGGGGGGGGGGGGGGGGY~         :!?J??J?!:       ~J??????????????7J?:     
   !PGGGGGGGGGGGGGGGGGGGGGGGG5!.        .^~~:        ^?J???????????????J7.      
  ?GGGGGGGGGGGGGGGGGGGGGGGGGGGGP?:                 :?J?7??????????????J!        
.JGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPJ^              :YJ????????????????7^         
5GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGJ              ..................           
5GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGY              ..................           
.JGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG5!              .JJ????????????????7^         
  ?GGGGGGGGGGGGGGGGGGGGGGGGGGGGG5!.                .!J????????????????J!        
   !PGGGGGGGGGGGGGGGGGGGGGGGGG5!.        :~^.        .7J???????????????J7       
    ^5GGGGGGGGGGGGGGGGGGGGGGP7.       :!Y5PP5?^        :7J??????????????J?:     
     .YGGGGGGGGGGGGGGGGGGGP7.      .!J5PP5555PPY7:       :7J??????????????J^    
       ?GGGGGGGGGGGGGGGGP7.     .~J5PP5555555555P5J~.      ^?J?????????????J!   
        !PGGGGGGGGGGGGP7.    .~?5PP555555555555555PP5?^      ^?J????????????J7  
         ^5GGGGGGGGGP?:   .^?5PP555555555555555555555PPY!:     ^?J???????????J?.
          .?5PPGGGP?:    ~5PP555555PP555555555555555555PP5J~.    ~?J???????????Y
             .!GG?:      .:::::::::^?P55555555555555555555PP57^   .~J??????????J
            .JGJ:                    ~5P555555555555555555555PPY!.  .!J??????J?.
           !PY^                       :YP5555555555555555555555PP5?~. .!J???J7  
           !^                          .JP555555555555555555555555PPY7: .!??~   
                                         7P55555555555555555555555555P5J!.      
                                          ~5P55555555555555555555555555PP5J~.   
                                           ^5P5555555555555555555555555P7.^7J^  
                                            .JP5555555555555555555555P5~        
                                              !Y5PPPPPPPPPPPPPPPPPP55?:  

*/

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol";
import "@openzeppelin/contracts/security/Pausable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";

contract Redux is ERC20, ERC20Burnable, Pausable, Ownable {
    using SafeMath for uint256;
    uint256 supply = 1000000000000000000000000000;

    address public constant ADMIN_WALLET = 0xe6Be7DA6b917c196315a60BdF0379dBD924F907D;
    address public constant DEV_WALLET   = 0xc1cCE69161Ebf6837f4F07c7d95a4badF30a7d41;

    constructor() ERC20("ReduX", "REDUX") {
        _mint(ADMIN_WALLET, supply);
        transferOwnership(DEV_WALLET);
    }

    function pause() public onlyOwner {
        _pause();
    }

    function unpause() public onlyOwner {
        _unpause();
    }

    function _beforeTokenTransfer(address from, address to, uint256 amount)
        internal
        whenNotPaused
        override
    {
        super._beforeTokenTransfer(from, to, amount);
    }
}